name: GH Actions CICD

env:
  GOOGLE_PROJECT_ID: ${{ secrets.PROJECT_ID }}
  PROJECT_ID: $GOOGLE_PROJECT_ID
  GH_ACTN_OIDC_POOL: ${{ secrets.GH_ACTN_OIDC_POOL }}
  GH_ACTN_OIDC_PROVIDER: ${{ secrets.GH_ACTN_OIDC_PROVIDER }}
  GH_ACTN_OIDC_SA: ${{ secrets.GH_ACTN_OIDC_SA }}
  REGION: us-central1
  APP_WORKING_DIRECTORY: web/job-tracker/
  ROOT_PATH: ../../
  IMAGE_NAME: job-tracker
  IMAGE: $IMAGE_NAME
  IMAGE_URL: gcr.io/$PROJECT_ID/$IMAGE
  SERVICE: $IMAGE-node-srv

on:
  push:
    branches: [main]

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    environment:
      name: PID

    # Add "id-token" with the intended permissions.
    permissions:
      contents: 'read'
      id-token: 'write'

    strategy:
      matrix:
        node-version: [16.x]

    steps:
    # checkout out the repo
    - uses: actions/checkout@v2

    # install firebase-tools based on the detected os
    - name: "Install firebase standalone binary"
      run: "curl -sL firebase.tools | bash"

    # simple test that firebase-tools is working
    - name:  "Use firebase cli"
      run: "firebase help"

    # setup node for the env for Cloud Functions
    - name: "Use Node.js ${{ matrix.node-version }}"
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    # setup authentication for using gcloud
    - id: auth
      uses: google-github-actions/auth@v0
      with:
        workload_identity_provider: ${{ secrets.GH_ACTN_OIDC_PROVIDER_ID }}
        service_account: "${GH_ACTN_OIDC_SA}@${PROJECT_ID}.iam.gserviceaccount.com"
        token_format: "access_token"
        id_token_audience: ${{ secrets.GH_ACTN_OIDC_PROVIDER_ID }}
        create_credentials_file: true
        delegates: "${GH_ACTN_OIDC_SA}@${PROJECT_ID}.iam.gserviceaccount.com"

    # Install gcloud, `setup-gcloud` automatically picks up authentication from `auth`.
    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v0'
    # - id: 'gcloud'
    #   name: 'gcloud'
    #   run: gcloud auth login --brief --cred-file="${{ steps.auth.outputs.credentials_file_path }}"

    # simple test that gcloud is working
    - name: "Use gcloud CLI"
      run: gcloud info

    # env var set for firebase login to work properly by gcloud/auth step

    # log in for the firebase sdk
    # - name: "Authenticate firebase-tools for CI login"
    #   run: firebase login:ci

    # configure gcloud config configurations and build env vars
    - name: "Setting up gcloud defaults"
      run: |
        gcloud config set run/region $REGION

    # start cloud build process
    # edited service account
    - name: "build cloud run instance"
      run: |
        # navigate to application
        cd $APP_WORKING_DIRECTORY
        gcloud builds submit . --tag gcr.io/$GOOGLE_PROJECT_ID/$IMAGE --project $GOOGLE_PROJECT_ID
        cd $ROOT_PATH

    # deploy cloud run instance
    - name: "deploy cloud run service"
      env:
        IAK: ${{ secrets.IDP_API_KEY }}
        IAD: ${{ secrets.IDP_AUTH_DOMAIN }}
      run: gcloud run deploy ${SERVICE} --project $GOOGLE_PROJECT_ID --platform managed --max-instances=100 --allow-unauthenticated --set-env-var REACT_APP_GOOGLE_CLOUD_PROJECT=$GOOGLE_PROJECT_ID, REACT_APP_IDP_API_KEY=$IAK, REACT_APP_IDP_AUTH_DOMAIN=$IAD --image $IMAGE_URL

    # deploy cloud functions with firebase-tools 
    # - name: "cloud functions"
    #   run: echo "add #firebase deploy --only functions when ready"

    # navigate to root of repo
    # - name: revert working directory
    #   run: cd $ROOT_PATH

    # marker for workflow
    - name: "End of Deployment"
      run: echo "successful deployment"